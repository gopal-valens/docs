(self.webpackChunkguzzle=self.webpackChunkguzzle||[]).push([[5160],{3905:function(t,e,r){"use strict";r.d(e,{Zo:function(){return c},kt:function(){return f}});var n=r(7294);function a(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function i(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function o(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?i(Object(r),!0).forEach((function(e){a(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function s(t,e){if(null==t)return{};var r,n,a=function(t,e){if(null==t)return{};var r,n,a={},i=Object.keys(t);for(n=0;n<i.length;n++)r=i[n],e.indexOf(r)>=0||(a[r]=t[r]);return a}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(n=0;n<i.length;n++)r=i[n],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(a[r]=t[r])}return a}var l=n.createContext({}),u=function(t){var e=n.useContext(l),r=e;return t&&(r="function"==typeof t?t(e):o(o({},e),t)),r},c=function(t){var e=u(t.components);return n.createElement(l.Provider,{value:e},t.children)},d={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},p=n.forwardRef((function(t,e){var r=t.components,a=t.mdxType,i=t.originalType,l=t.parentName,c=s(t,["components","mdxType","originalType","parentName"]),p=u(r),f=a,g=p["".concat(l,".").concat(f)]||p[f]||d[f]||i;return r?n.createElement(g,o(o({ref:e},c),{},{components:r})):n.createElement(g,o({ref:e},c))}));function f(t,e){var r=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var i=r.length,o=new Array(i);o[0]=p;var s={};for(var l in e)hasOwnProperty.call(e,l)&&(s[l]=e[l]);s.originalType=t,s.mdxType="string"==typeof t?t:a,o[1]=s;for(var u=2;u<i;u++)o[u]=r[u];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},825:function(t,e,r){"use strict";r.r(e),r.d(e,{frontMatter:function(){return s},metadata:function(){return l},toc:function(){return u},default:function(){return d}});var n=r(2122),a=r(9756),i=(r(7294),r(3905)),o=["components"],s={},l={unversionedId:"How to guides/Ingest data/Working with Big Data",id:"How to guides/Ingest data/Working with Big Data",isDocsHomePage:!1,title:"Working with Big Data",description:"This article outlines how to work with Big Data file formats namely: Parquet, Avro and ORC in Guzzle\u2019s Ingestion activity. Guzzle supports these file formats for source and target in Ingestion activity.",source:"@site/docs/How to guides/Ingest data/Working with Big Data.md",sourceDirName:"How to guides/Ingest data",slug:"/How to guides/Ingest data/Working with Big Data",permalink:"/docs/docs/How to guides/Ingest data/Working with Big Data",editUrl:"https://github.com/ja-guzzle/docs/blob/master/docs/How to guides/Ingest data/Working with Big Data.md",version:"current",frontMatter:{},sidebar:"sideBar",previous:{title:"Watermark",permalink:"/docs/docs/How to guides/Ingest data/Watermark"},next:{title:"Working with Databases- Azure SQL",permalink:"/docs/docs/How to guides/Ingest data/Working with Databases- Azure SQL"}},u=[{value:"Big Data File Formats as a Source",id:"big-data-file-formats-as-a-source",children:[]}],c={toc:u};function d(t){var e=t.components,s=(0,a.Z)(t,o);return(0,i.kt)("wrapper",(0,n.Z)({},c,s,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"This article outlines how to work with Big Data file formats namely: Parquet, Avro and ORC in Guzzle\u2019s Ingestion activity. Guzzle supports these file formats for source and target in Ingestion activity."),(0,i.kt)("h2",{id:"big-data-file-formats-as-a-source"},"Big Data File Formats as a Source"),(0,i.kt)("table",null,(0,i.kt)("tr",null,(0,i.kt)("td",null,"Property "),(0,i.kt)("td",null,"Description"),(0,i.kt)("td",null,"Default Value"),(0,i.kt)("td",null,"Required")),(0,i.kt)("tr",null,(0,i.kt)("td",null,"Character Set"),(0,i.kt)("td",null,"It refers to the Set of Characters used to Read/Write test files. Allowed Values include: UTF-8, UTF-16 etc."),(0,i.kt)("td",null,"UTF-8"),(0,i.kt)("td",null,"Yes")),(0,i.kt)("tr",null,(0,i.kt)("td",null,"File Pattern"),(0,i.kt)("td",null,"This is the file name pattern to find matching files in the data store. Refer to Working with Multiple Files for more details on defining the patter Example: customer/data/*.orc"),(0,i.kt)("td",null,"None"),(0,i.kt)("td",null,"Yes")),(0,i.kt)("tr",null,(0,i.kt)("td",null,"Compression"),(0,i.kt)("td",null,"This is used to specify the compression codec used by the file when writing to Parquet, Orc and Avro Files respectively. When reading from Big Data files, Guzzle determines the compression code based on the file metadata. Supported types include Snappy, Brotli, Lzo etc."),(0,i.kt)("td",null,"Snappy"),(0,i.kt)("td",null,"No"))),(0,i.kt)("p",null,"< \t- Which property is present in source side or target side is not given. "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"- Comppression is present in target side only not for source. >\n")),(0,i.kt)("p",null,"The Interface for the Big Data Formats can be seen in the figure below:"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"image alt text",src:r(310).Z})),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},'As this files has binary type data we can see data in table form by clicking on "Sample Data" which is present on right side on the corner of UI.')))}d.isMDXComponent=!0},310:function(t,e,r){"use strict";e.Z=r.p+"assets/images/bigdatafileformat-d1f598a7bcef062e19ff0c6fda97f80e.png"}}]);